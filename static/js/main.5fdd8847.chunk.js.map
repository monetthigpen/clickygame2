{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","alt","name","src","image","onClick","handleClick","id","Wrapper","className","children","Jumbrotron","App","state","images","count","highScore","message","clickedImg","event","_this","indexOf","handleIncrement","setState","concat","Reset","handleShuffle","shuffledImages","arr","i","length","c","Math","floor","random","_ref","shuffleImages","score","_this2","this","href","Jumbotron","components_Wrapper","map","components_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"w8DAceA,MAXf,SAAmBC,GACjB,OAGMC,EAAAC,EAAAC,cAAA,OAAKC,IAAKJ,EAAMK,KAAMC,IAAKN,EAAMO,MAAQC,QAAS,kBAAMR,EAAMS,YAAYT,EAAMU,cCAzEC,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WAAWZ,EAAMa,iBCWxBC,MAZjB,WACI,OACIb,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACfX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,aAAYX,EAAAC,EAAAC,cAAA,yBAC1BF,EAAAC,EAAAC,cAAA,KAAGS,UAAU,QAAOX,EAAAC,EAAAC,cAAA,oGC0FjBY,6MAhFbC,MAAQ,CACNC,SACAC,MAAO,EACPC,UAAW,EACXC,QAAS,GACTC,WAAY,MAIdZ,YAAe,SAACC,EAAIY,IAEyB,IAAvCC,EAAKP,MAAMK,WAAWG,QAAQd,IAChCa,EAAKE,kBACLF,EAAKG,SAAS,CAAEL,WAAYE,EAAKP,MAAMK,WAAWM,OAAOjB,MAEzDa,EAAKK,WAITA,MAAQ,WACNL,EAAKG,SAAS,CACZR,MAAO,EACPC,UAAWI,EAAKP,MAAMG,UACtBC,QAAS,4CACTC,WAAY,KAEdE,EAAKM,mBAEPA,cAAgB,WACd,IAAIC,EAtCR,SAAuBC,GACrB,IAAK,IAAIC,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADDM,EAEpB,CAACP,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAFkCM,EAAA,GAE9BP,EAAIG,GAF0BI,EAAA,GAIzC,OAAOP,EAiCgBQ,CAActB,GACnCM,EAAKG,SAAS,CAAET,OAAQa,OAG1BL,gBAAkB,WAEhB,IAAMe,EAAQjB,EAAKP,MAAME,MAAQ,EACjCK,EAAKG,SAAS,CACZR,MAAOsB,EACPpB,QAAS,gBAEPoB,EAAQjB,EAAKP,MAAMG,UACrBI,EAAKG,SAAS,CAAEP,UAAWqB,IAEV,KAAVA,GACPjB,EAAKG,SAAS,CAAEN,QAAS,aAE3BG,EAAKM,yFAGE,IAAAY,EAAAC,KACP,OACEzC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+CACXX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,eAAe+B,KAAK,KAAjC,gBACA1C,EAAAC,EAAAC,cAAA,QAAMS,UAAU,wBAAwB8B,KAAK1B,MAAMI,SACnDnB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,wBAAhB,UAA+C8B,KAAK1B,MAAME,MAA1D,iBAA+EwB,KAAK1B,MAAMG,UAA1F,OAGLlB,EAAAC,EAAAC,cAACyC,EAAD,MACD3C,EAAAC,EAAAC,cAAC0C,EAAD,KAGGH,KAAK1B,MAAMC,OAAO6B,IAAI,SAAAvC,GAAK,OAC1BN,EAAAC,EAAAC,cAAC4C,EAAD,CACErC,GAAIH,EAAMG,GACVsC,IAAKzC,EAAMG,GACXL,KAAME,EAAMF,KACZE,MAAOA,EAAMA,MACbkB,gBAAiBgB,EAAKhB,gBACtBc,cAAeE,EAAKF,cACpB9B,YAAagC,EAAKhC,yBAzEZwC,mBCXlBC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5fdd8847.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n    \r\n      // <div className=\"card-body\">\r\n        <img alt={props.name} src={props.image}  onClick={() => props.handleClick(props.id)}  />\r\n    //  </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbrotron() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container text-center\">\r\n            <h1 className=\"display-4\"><b>Clicky Game</b></h1>\r\n            <p className=\"lead\"><b>Click on an image to earn points, but don't click on any more than once!</b></p>\r\n            </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  \r\n  export default Jumbrotron;","import React, { Component } from \"react\";\r\nimport ImageCard from \"./components/ImageCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\n// import Title from \"./components/Title\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\n// import Navbar from \"./components/Navbar\";\r\n// import Counter from \"./components/Counter\";\r\nimport  images from \"./images.json\";\r\n\r\nfunction shuffleImages(arr){\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    let c = Math.floor(Math.random() * (i + 1));\r\n    [arr[i], arr[c]] = [arr[c], arr[i]];\r\n  }\r\n  return arr;\r\n};\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    images,\r\n    count: 0,\r\n    highScore: 0,\r\n    message: \"\",\r\n    clickedImg: []\r\n  };\r\n\r\n  \r\n  handleClick =  (id, event) => {\r\n    \r\n    if (this.state.clickedImg.indexOf(id) === -1) {\r\n      this.handleIncrement();\r\n      this.setState({ clickedImg: this.state.clickedImg.concat(id) });\r\n    }else {\r\n      this.Reset();\r\n    } \r\n    \r\n  }\r\n  Reset = () => {\r\n    this.setState({\r\n      count: 0,\r\n      highScore: this.state.highScore,\r\n      message: \"You already clicked that! Lets try again!\",\r\n      clickedImg: []\r\n    });\r\n    this.handleShuffle();\r\n  };\r\n  handleShuffle = () => {\r\n    let shuffledImages = shuffleImages(images);\r\n    this.setState({ images: shuffledImages });\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    \r\n    const score = this.state.count + 1;\r\n    this.setState({\r\n      count: score,\r\n      message: \"Keep Going!\"\r\n    });\r\n    if (score > this.state.highScore) {\r\n      this.setState({ highScore: score });\r\n    }\r\n    else if (score === 10) {\r\n      this.setState({ message: \"You win!\" });\r\n    }\r\n    this.handleShuffle();\r\n  };\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n        <nav className=\"navbar navbar-dark bg-dark navbar-fixed-top\">\r\n            <a className=\"navbar-brand\" href=\"/\"> Clicky Game</a>\r\n            <span className=\"navbar-brand mb-0 h1\">{this.state.message}</span>\r\n            <span className=\"navbar-brand mb-0 h1\">Score: {this.state.count} | Top Score: {this.state.highScore} </span> \r\n        </nav>\r\n        </div>\r\n       <Jumbotron/> \r\n      <Wrapper>\r\n        \r\n        \r\n        {this.state.images.map(image => (\r\n          <ImageCard\r\n            id={image.id}\r\n            key={image.id}\r\n            name={image.name}\r\n            image={image.image}\r\n            handleIncrement={this.handleIncrement}\r\n            shuffleImages={this.shuffleImages}\r\n            handleClick={this.handleClick}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}